%!PS-Adobe-2.0 EPSF-1.2
%%Title: E_CAT_4c_oT.FH10
%%Creator: FreeHand 10.0
%%CreationDate: Sat Nov 22 16:59:04 2003 
%%BoundingBox: 0 0 364 83
%%FHPathName:\\Nt-data01\dfs\Marketingcom\Sonstiges\EtherCAT_Marketing\gespeert\logo\ethercat\E_CAT_4c_oT.FH10
%ALDOriginalFile:\\Nt-data01\dfs\Marketingcom\Sonstiges\EtherCAT_Marketing\gespeert\logo\ethercat\E_CAT_4c_oT.FH10
%ALDBoundingBox: -104 -400 491 442
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%CMYKProcessColor: 0 1 1 0 (Rot)
%%EndComments
%%BeginAGDEmbeddedDoc: version 1.0
%:s8W,W5t==#^::et!!!KAGQG3TH$g;p(4MY[WQDsgNY!=r^aZD&
%:s8VO$KL?VQ6b!2+5saRn)j:7OYQQ_4^uR0S&;4U[<,dt=$+PSiMActI_&k-sJ,fX#Elaq>jA;1K,)YB2XtJDr^$\L=3oa$8f^8K/IpMNDpZg;0fA0HWj<,h0,WB;^Gm^?t.QJmW;E:bW!!.Jh=6AC3MGe*h9ql?d:AH^KF<H%PTljcO!mrkCL,p#B_k:"[?`%Lt8*d6`a/l-1lhK"ST]Z3;980;R5<erq,U=Rc*2Y>Rqh`K-7=li;
%:e-HXu+DNkbLg8r#iDY4[XCpb.E5d7.O`8EDU,e3&n(:g'KWha7,DKVBT%P7X:Ln+F(#<ni?*1#?&2f**;#E]ALPpZe\-dr7\l=aU;ZdB)L=AbA!R$8:PASmE^e^`LGZRmFDD4UgPkls%6I-IYH9g6X%(21$WSC<MAS>3YQ%-+l%YT+,3uRtrFOK[5C\hs8Gi>$+FNoi=cti&I/MnlGs&T4U1.MaR#6]5f7P./OXfABQL*eLs)G+fE
%:NhR+1B-KD]rbXAHlga^<8TRh0<caefp1ADLFR799no$J-pP4#n2u!20flsddnE>+:'mJKL9k+TbW6uMB6*=LMdFpY"e<5BX9k+Tj]5F9;:3(3BUVD09Lfsa*N\NV,8$6\kHYOc1R7G9DZD.@W%&q!4.\@[Cj9Vnk<TT.5SX*kUcAlKLHYXk,XZ(lK8#\(+[GN:3`Mr.qK=*hjT&O1UnAg(b>8)meVA+lB??9k4)o,%YW>I:L'(fKs
%:*4u\tiSG`;FC6,P;S!!kH"\TE%#p*gg#V)QOUf9['Q(.eG$p<4>bMdlgZo)-%ul?>XL&2@fJadF?QE&u&3&lN]GfHnDDRC6MuZiC"o7G/`L,=Z55csZ]9R%abB7$h7Yet"&Y`7&3`7OYL0@G:h$0M;%8&9skP**>.dW_laj#Tm]V8&KJ/)o5_U9O%QU-`'X,3c4[1P5j-'3jZInUD5DJo)\,5t"ZAY;@oW<Bi;Grsh*G&OgS/p4)-
%:"S#[8QqF<J=Mf\$Q4e2^dt+!re3S3LW=sD3/gX[joKqK(DQ.]"O$&e]'OY1VDcr5@6le]4X[>1,]#[P<B)P9O/c\Pk?=Sgrm8d[A04plr/2JN_M'h5C<rY_HV<9ell<T]VSTo#]_=T.JZI+Cs`XDU3RH<s0/I)Fo'^"RREMJ1hbJC@sSI^;4R[!6^/BlAt)E_0]9IB$npYahrm\N*46^(kG6.Aus"MPu3mSC/c%[MS%!i(QBq4-`Q
%:#.napr3E?XFO#n?%3E5T*Eg,1Ngcu8j:TOd9MIT1;H6C?[\K]L[q#kX62&;\N2NQ/rIJp;&0<>WY;0%sFIue7-8%tc>*)r]qm_\;ZtGgJ9hO724N<U#6)gn,S5D4c-J6_=:8i)?F$]Vpp)W@]dB^AK'N;bTa="h-OL'`RIY'V4e^g=Oec)g\WQj2;$LS2sOHE`tT7<1g(a#c$Q8MMEJi`*N;e;AFe[>Kue[W<Q:MT4;_//VCf@90u
%:=\[Ds8,K90hHM=/HF=&';es)cVN/,L.9M%9Lu@H1Q!3KHcZHQIV*m%U4-e#<DS-mk0)r8S.e>JoPomG5j[NBOT-deU&`^%`rp&9UV:)OL"mXkr%^j217e"[BWu7=O4m9KRkd)tZ1OJ9l^:tj2q<FHU6iBP\=PSj%o]fZ?Lm130IWVT,,>7FFe?N'r&B]`$S[c"sg3;Ir4#1r`n9q!HaOD$.[u3Nk1A1U#2heO\;jTgg;3e2NMuXHO
%:g6&A0%m;J.%K5qV8SQWQ#+#8KNXo0'0%<l;Or)hLW#I;saqpI,?hC!PRW7/D9V$L&>UUP3elG#;;eZ@MI%8g]`1N0@4DmCp8<%SHa7)8ph)4?t<?>:LNBN#%;7i0kF,"d`nXA/P>?>t9fM&Nmi<tUGQ*dNng>=/[Y^BeR?.MuobR5W#TPfZVgnk64F`H@iTe*,OZA@8BTVfH;H<M^)16n4c<O'W"RUSWX=cfVk=b.d&Tr-IVm6Ee>
%:VC\YTZA8rn:fI60?5#q@ff6t0:%!=1D%BE@*G94)luoco,AV:LFp&&N*mQ^op.*a!ZCc+GUPEAb)d:5rCW0Zrk#H/C`"kEiF_dsX-lZo9pWa.E`I^c@$9PCmA4''3n!#&]"dt60T:f:s6VVu,YuE+ZC4e(s[OeAVbN%Iqb(<=+s8<&=+rb:^C</i;/BAM1MFBGq'C,iZ7Uk2p&o5#sH6;oZ!bt*25/?iU:c?hQZ#=5G'oeiuQ]l6D
%:pGf(jr=+Za78g'&gq#gk7+5sAef'edVN*<V9CVS[EOr5#*ceDm6)MXS>:1U6C?f>9A#Z3me,:<>NKfi\<Yq,#X<*<=,<.Nc%jPj!8D'T\T%]qD*]p:Fj,n)BKgM,oi\"G3;g_M!AO31QFtBqmT4+\sJdS8mR)T^R5rGig9X'-!S@uD26_4,.;,]t#m1N%OR<O,@DAVGpQL<&"=t;T.f?)HX;"";*e`$#jJuAY9(>RC812@W8TV</I
%:%]aG>dM1;FS:9I37W*#8CX9%%LV?hGhonsPa+()36D[IUH]"QJC_LH(4figVELdP6h<7\I;NIj;6N[I4G?nWf/PjM7kniAdcZ*7a'.bM3A/q$D95$"p2G>+hl(Fs^(=-$Z:WV=f0YEOJ3'9jqKs_OEY.KUS[2t`?U:<*+hjA$/kB3#LIEt."NRCoIc1'ao(mYp7_J3h*9@A09BcfoG)fj\kr`(,+%5i:(h,LAJn`0NN*6"2PFYnf[
%:J$%#!=f%F]N>#RmT6ZBsoup>Re_,m$[H^;a3r@u)?.K^&5$)/tp<tcg!HqsKR5u;?<@rYY=e4I@X=fDMX.L2COY7&!Th&Gt>GW,2,#e)']7d3(g_T21f]RoS1cW]!%IO?Dap>Jeo#DY`3+a?FdV'PWELquO%8Y=?#/L.['!>u0g:'dnM$rXC,,d?-%#_2^DJB*.gACPe/fQ"MY*O>`L!ggoBb$JtM@!Xkp7-M-E:<chK&u*..E=F<
%:U,?M].Y"Fm.iQSP`g0(3SX)09`,/Z(D\hGj].GT%@L4"?C9]*WQ%a+_UUJG^>IU9&G0g.Y-jqf\da:UjaG*C-6nB-A2In<2\NHR%aAd9/.CFNMV.ttBT;d"K<f]T]>;BCLH.siO54YN-^55WVe5dShml!j^`B4nbf[;1S61-L,2Y7Y?-fmqLU+B/_MY3+!(CX[0MB,SjYf4+&N(c\>>$mPq)1lF<)7XTaJ_&O^2T!G@)-Ip"(a%(b
%:<8?Uh7>hbcV$q4U54O@6)-^+(ZO2UMQtQeu[XNSJeNESf@&pmQ(n%rm4$]l'Q:8P=jaC37CTW4d^UUd3,ARCLC>.udd:,L\.75&`Pl;:nJrP=dH5PBX;t0HL^*DQJ.R]8b%?_p(/2pb.`,I2@KjYibDk@HXZY^TiOG,l/d)H^D:Tn(!0#X4[/M/1jb:$]p<c31M(;CXGEGfpc$<),t<5moq6<TDLnAKYfMeo>kD4*$_AO30pOJ.4B
%:ZKEYPfhbU`O=:Qh&uQnYUJHR26hDFnT&`?/d:5RX-EaE^SqVEC@U[.n2&W\kA)1+r)mst]cC06[fs2Jp]u`c+ktYuS/Zp/!YHZZgDth1H.P+>]04]VJSEc\PQr7&QiV0,f`qBF_DsN,.ZXfP]o>$2i1NLtQVoQ'n_Gc5NHL]X2A]2$E\OY-j>Hf^;JKlk7k$hNb3V2<FJsd;/`5^@>7H!P]AS`qUHNs%c$Lg@nd>@'b-EoSZ$k>1M
%:TgQU]L=qA^'/N%9,,U`0BZfM+jb8;HLa<0q`+lWc$0[2t8rqq9:/?C#@Hpj[HA7b#EQ-H&Q8P,>U%oN3A)hV_4\?)99'4P8gWk638OTQ*]t"f6ZJ@Np]o*4)F0eAI\Yg/Z7ZI"`YgCn/cEQqtmZadjmTT;Uk/0N3MAG1D<db*-\3I["d%)9-?K0c.k]>uk.ip@HWg`\'agRP)SVmqjj!@4Y],*.*7fQt25ifMQ>+9)J[olYr_7\pT
%:4'JYE,K56g2l][0YS1/fTOUC5nINWi2l8#""3huBr<;"_9M;Cdac25,10TPW4cN*^3Qsk:I!Wd)1#FYpj=;=B-r-d(`'(50;-&F`JA]3D*GM7_&nV-o7gV=/fD)o`$Tt<2nDuD6B*rqj-.n-5%pJ;<A^h_dD#b:#acRe"4`GpZDa$NP8AGfp*9`3)R#lYl1P=6c2c"N9;%%&3c.s5@"26`cjlL.:?i\DWk4+`,[JCq,]D5ZTK=D`X
%:JUBB&?`QOKihJ9bq0e0A-?.9tZ"]@g;rq?b68ll0X1T!%E"D*mAY`#@GIqqKAe99SKIq'PhGdXBJ.:[0r%b($VsLdlS71+dI)1f_jC^=;nPn<:]s.I(Lc]N3[TSA_%!F.J@B6C=[RUP[S-hgmr7G0]5'HRMI%\RLK76$qEe?[!1&0!BS2)8DHmC[#/28;.Z#eNmY+7X$G%;Cd2r%<?2j3'SLPqn]-RU8f,^8M$-+RfhV"Vnb3t"^5
%:AiVTV;jRtcSWe;Ek2Ig.Xeb.EDnm1Q7='gAd`_7i]h5-.Nn2Y`g;qss.mGPTo=!ceGT3&<[";VZf1!jNTGoc$laiF7CF()-/H^Qi-^E1uO!krmGUK^=r`mGTE!K-$WI)Nqk'=K\HGcZsn6^oZ)AW;u!VueW7VQ[M@:F%a!!0W26tp.Q!!0K-;fm%oDJ&qM*`-EgF)Y]#FD5o07ri<S!!*'oE)0qXARff^!:ro`FE2)5B)hqs]FInU
%:9h]8BF8u=&9gi]*F8u@<6t(1K<,$2\!!%U?847B+87c4?AT@bN2aV>!@qu&EH:;X]D.RU,!!0`59lNm;C&e5B5t==4Df0Xs!KL,f@T6cFCh3SIo2BpO@W-'VBju*kEd7Wc;,D:OE(k=p!!,ejEc5H!A9Dp(!!#YZDes?42?3aE9ho,6AH2_Y9PJQi!!()6Bl7KY@<;JLG"$4YD+nYbF8u;b7;QOP:i^Jn9QP:U!/sB]B6A6+=KjnY
%:!!.XLFEq\6:i^Jn9QP:U!I[mcDfe?bCi=>P!!"Z=@<6-m9PJBU!!"W<@<6-m7VQ[T!!'#hF_PAtErZ5$:gnHZ!!#SXDes6$@ruX0!!'`,@<lF)!!"?3EcQ)B:gnHZ!!#tcDf'H3F(o`-:gnHZ!!&fbEc6)>!!!!!YQ;-4I0$_VI0$_VI0$_U9*!B?a8j9]a8j9]a8j9]a8j9]a8j9]dJtTo-3,@m-3,@m-3,@mdK-`VI0$_Vps8:@
%:I0$_VI0$_VI0$_VI/q[qm/TcZG6$n/[/do@9)s/9l2\Nu9)s/9G6"WCl2e9m^&Ue+G6$n/[/do@9)s/9G6,)Om/ZMR0*(A?JH.;&G6'](G5s5qG6'](G5s5qG6'](G5ugf3<47(3<8=E;uh+C3<47(3<47(3<47'G6'](G6'](l2Xc`G6'](l2[U[G5ugeG6'](G6'](G6'](G6'](l2Xc`l2[U[l2[U[G6'](l2[U[l2e9mpsoN)
%:^&ZR^[/fRpNW:[4[/^U9[/mo@JH4*um/ZDOm/ZDOG6$%l*WYI+q>p0f2ZW4FG6"WCm/V>1l2[U\]E%3sm/ZMS[/fRp[/fRp[/fRp[/fRoo)S.Xo)V\gm/ZDOJjsQbFCdjO@rGmh!<<*!rr<$!Hd6uF
%:~>
%%EndAGDEmbeddedDoc
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if	
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
/cntr 0 def
2 copy readstring
{
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get  32 sub 0 exch put
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
}if
cntr 0 gt
{
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
} if
pop exch pop
} bdf
/_NXLevel2 defed {			
_NXLevel2 not {			
/colorimage where {
userdict eq {
/_rci false def		
} if
} if
} if
} if
/md defed{	
md type /dicttype eq {		
/colorimage where {		
md eq {				
/_rci false def	
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf	
}ifelse
/privrectpath {	
4 -2 roll m
dtransform round exch round exch idtransform	
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/`	
{
false setoverprint		
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1
statusdict begin
/processcolors defed
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
%	pix = x^2 + y^2
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency}			
{GrayAngle GrayFrequency}	
{0 Width Height matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60}	
ifelse
}
ifelse
end
}
{
currentscreen pop exch			
}
ifelse
printerRes 300 max exch div exch	
2 copy								
sin mul round dup mul				
3 1 roll							
cos mul round dup mul				
add 1 add							
dup maxsteps gt {pop maxsteps} if	
dup minsteps lt {pop minsteps} if	
}
ifelse
} bdf
/nextrelease defed {						
/languagelevel defed not {				
/framebuffer defed {				
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps
{
forcemaxsteps
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max  
printerRes div 					 
gradfrequency mul 				 
round 						 
5 max						 
min							 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def			
/delta -0 def			
/frac -0 def			
/height -0 def			
/left -0 def			
/numsteps1 -0 def		
/radius -0 def			
/right -0 def			
/top -0 def				
/width -0 def			
/xt -0 def				
/yt -0 def				
/df currentflat def		
/tempstr 1 string def	
/clipflatness currentflat def	
/inverted?				
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def		
/tc2 [0 0 0 1] def		
/storerect{/top xdf /right xdf /bottom xdf /left xdf
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup}	
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def	
{				
exch dup	
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall
NF
}bdf
/MN{
1 index length 		
/Len exch def
dup length Len add 	
string dup 			
Len 				
4 -1 roll 			
putinterval 		
dup 				
0 					
4 -1 roll			
putinterval			
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFJ		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFJ{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCJ}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup			
hasfont		
not			
{			
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont			
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFJ{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFJ				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/GS {
dup
hasfont
{
findfont
exch makesetfont
exch
pop
ts
}
{
pop pop pop
ts
} ifelse
} bdf
/RCK{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFK		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFK{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCK}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFK
{
dup			
hasfont		
not			
{			
pop
/JCsm
hasfont			
{
/JCsm
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFK{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFK				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/RCTC{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFTC		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFTC{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCTC}
ifelse
}bdf
/FDFTC
{
dup			
hasfont		
not			
{			
pop
/DFMing-Lt-HK-BF
hasfont			
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFTC{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFTC				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/RCSC{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFSC		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFSC{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCSC}
ifelse
}bdf
/FDFSC
{
dup			
hasfont		
not			
{			
pop
/zh-gbscript-1.11
hasfont			
{
/zh-gbscript-1.11
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFSC{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFSC				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/fps{
currentflat 		
exch 				
dup 0 le{pop 1}if	
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}	
{exit}			
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf		
/W{/clipper load 100 clipflatness dup setflat fps}bdf
/AVec 256 array def
AVec 0 /Helvetica findfont
/Encoding get 0 256 getinterval putinterval
/ANSIPatch[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash
16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar
16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5/mu
16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute
16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve
16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply
16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis
16#DD/Yacute 16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute
16#E2/acircumflex 16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae
16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis
16#EC/igrave 16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth
16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde
16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute
16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis
] def
127 1 159 { AVec exch/bullet put } for
ANSIPatch aload pop ANSIPatch length 2 idiv{AVec 3 1 roll put}repeat
/DoPatch { dup /CharStrings known
{ setfont
0 1 255 { dup
currentfont
/Encoding get
exch get
currentfont /CharStrings get
exch known
{pop} {currentfont /Encoding get exch /bullet put} ifelse
} for
} {pop} ifelse
} def
/findheaderfont {
AVec 256 array copy
/FHT /|______Helvetica dup RF findfont def
FHT DoPatch
FHT
}	def
end		%. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh	
_efh	
end %. AltsysDict
%%EndSetup
AltsysDict begin	
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor {    
max max max		
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf		
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{
4 index 1 index get	0.3 mul		
4 index 2 index get	0.59 mul	
4 index 3 index get	0.11 mul	
4 index 4 index get				
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx
6 -1 roll/exec cvx
7 -1 roll/exec cvx
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub	
1.0 dup im ik add min sub	
1.0 dup iy ik add min sub	
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll	
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll	
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf		
/setspotcolor {		
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf			
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def	
/_lfp4 {
1 pop	
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor						
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def	
/_lfs4 {
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 2 lt {pop 2} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
radius inrad sub abs			
adjnumsteps						
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf				
currentflat mark				
currentflat clipflatness		
{
{
dup setflat				
W 						
0 1 numsteps1			
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
1 pop	
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor					
calcgraysteps mul abs round	
radius inrad sub abs		
adjnumsteps					
dup 1 lt {pop 1} if			
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf			
currentflat mark			
currentflat clipflatness	
{
{
dup setflat			
W 					
0 1 numsteps1		
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def	
/vc{
AltsysDict /cvc 2 index put	
aload length dup 4 eq
{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
{6 eq {sethexcolor} {setspotcolor}	ifelse }
ifelse
}bdf	
0 setseparationgray
/imgr {1700.5 1577 2295.5 2419 } def			
/bleed 0 def			
/clpr {1700.5 1577 2295.5 2419 } def			
/xs 1 def				
/ys 1 def				
/botx 0 def			
/overlap 0 def			
/wdist 18 def			
0 2 mul fhsetspreadsize	
0 0 ne {/df 0 def /clipflatness 0 def} if	
/maxsteps 256 def		
/forcemaxsteps false def	
/minsteps 0 def		
userdict begin /AGDOrigMtx matrix currentmatrix def end
vms
-1804 -1977 translate
/currentpacking defed{false setpacking}if 	
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
2091.3033 2026.6948 m
2125.3191 1999.5805 L
2125.3191 2012.4079 L
2167.8568 2012.4081 L
2167.8568 2026.7087 L
2091.3033 2026.6948 L
f	
n
2167.8568 2032.1369 m
2133.8409 2059.2513 L
2133.8409 2046.4239 L
2031.7963 2046.4312 L
2031.7962 2032.1306 L
2167.8568 2032.1369 L
[0 1 1 0]vc
f	
n
1977.2503 1990.3708 m
1980.05 1990.3708 1982.7386 1991.0242 1985.5322 1992.1408 C
1981.3995 1978.2896 L
1979.203 1977.8332 1976.7874 1977.5128 1974.4886 1977.5128 C
1960.8564 1977.5128 1949.927 1985.9465 1949.927 2003.1595 C
1949.927 2019.3356 1961.3264 2027.4237 1974.4886 2027.4237 C
1978.8368 2027.4237 1981.4222 2026.8015 1985.6529 2025.9028 C
1985.6529 2013.1832 L
1983.0675 2014.151 1980.4233 2014.9805 1977.7791 2014.9805 C
1971.0805 2014.9805 1966.0272 2010.7637 1966.0272 2002.883 C
1966.0272 1994.5876 1970.728 1990.3708 1977.2503 1990.3708 C
[0 0 0 1]vc
true setoverprint
f	
false setoverprint
n
true eomode
1985.961 1978.3424 m
2001.6498 1978.3424 L
2004.1765 1988.7808 L
2017.4562 1988.7808 L
2020.1591 1978.3424 L
2036.6707 1978.3424 L
2022.0395 2026.5941 L
2000.3572 2026.5941 L
1985.961 1978.3424 L
h
2010.8752 2016.2248 m
2010.9926 2016.2248 L
2015.4584 2000.3944 L
2006.3506 2000.3944 L
2010.8752 2016.2248 L
true setoverprint
f	
false setoverprint
n
false eomode
1854.507 1985.0967 m
1853.3161 1984.5757 1852.1996 1984.1291 1850.6365 1984.1291 C
1847.8081 1984.1291 1846.6916 1985.7666 1846.6916 1990.0837 C
1846.6916 2012.4878 L
1854.507 2012.4878 L
1854.507 2017.5492 L
1846.6916 2017.5492 L
1846.6916 2030.9369 L
1840.4393 2030.9369 L
1840.4393 2017.5492 L
1834.4102 2017.5492 L
1834.4102 2012.4878 L
1840.4393 2012.4878 L
1840.4393 1988.074 L
1840.4393 1981.3751 1843.491 1979.0677 1849.2223 1979.0677 C
1850.9342 1979.0677 1853.0183 1979.5143 1854.507 1980.0353 C
1854.507 1985.0967 L
true setoverprint
f	
false setoverprint
n
1804.5001 1979.0887 m
1829.6582 1979.0887 L
1829.6582 1984.7456 L
1811.0501 1984.7456 L
1811.0501 2003.2048 L
1827.8718 2003.2048 L
1827.8718 2008.8616 L
1811.0501 2008.8616 L
1811.0501 2025.3856 L
1828.6906 2025.3856 L
1828.6906 2031.0425 L
1804.5001 2031.0425 L
1804.5001 1979.0887 L
true setoverprint
f	
false setoverprint
n
1859.7811 1979.0887 m
1866.0334 1979.0887 L
1866.0334 2001.9394 L
1866.0334 2008.7872 1869.1596 2012.2111 1874.0721 2012.2111 C
1878.0915 2012.2111 1880.3244 2009.606 1880.3244 2003.577 C
1880.3244 1979.0887 L
1886.5768 1979.0887 L
1886.5768 2005.4378 L
1886.5768 2013.7742 1882.1108 2017.5702 1875.4863 2017.5702 C
1871.0948 2017.5702 1867.8198 2015.0395 1866.1823 2011.8389 C
1866.0334 2011.8389 L
1866.0334 2030.9369 L
1859.7811 2030.9369 L
1859.7811 1979.0887 L
true setoverprint
f	
false setoverprint
n
true eomode
1921.7623 1996.2081 m
1921.7623 1999.5576 L
1921.7623 2010.7225 1916.9986 2017.5702 1908.4389 2017.5702 C
1898.986 2017.5702 1893.7757 2009.9781 1893.7757 1998.069 C
1893.7757 1986.1598 1898.986 1978.5677 1909.0344 1978.5677 C
1912.8304 1978.5677 1916.7009 1979.3864 1919.6782 1980.8006 C
1919.3805 1986.4575 L
1917.2219 1984.8944 1913.798 1983.3313 1910.6719 1983.3313 C
1903.7497 1983.3313 1900.3258 1987.4251 1900.3258 1996.2081 C
1921.7623 1996.2081 L
h
1900.3258 2000.9718 m
1900.4746 2009.8293 1904.0474 2012.8066 1908.0667 2012.8066 C
1913.0537 2012.8066 1915.51 2008.8616 1915.51 2000.9718 C
1900.3258 2000.9718 L
true setoverprint
f	
false setoverprint
n
false eomode
1928.6573 1979.0887 m
1934.9096 1979.0887 L
1934.9096 1999.1854 L
1934.9096 2007.4474 1938.3335 2011.6156 1943.1716 2011.6156 C
1943.9903 2011.6156 1944.8091 2011.5412 1945.5534 2011.3923 C
1945.5534 2017.5702 L
1939.971 2017.5702 1936.7704 2015.7094 1934.7607 2011.0946 C
1934.6118 2011.0946 L
1934.3885 2017.0492 L
1928.3595 2017.0492 L
1928.434 2014.3696 1928.6573 2011.6156 1928.6573 2008.8616 C
1928.6573 1979.0887 L
true setoverprint
f	
false setoverprint
n
true eomode
2077.1054 1987.9334 m
2078.4398 1987.9334 L
2079.2051 1987.9334 2080.0686 1987.7764 2080.0686 1986.8345 C
2080.0686 1985.7552 2079.3033 1985.6375 2078.4202 1985.6375 C
2077.1054 1985.6375 L
2077.1054 1987.9334 L
h
2075.6141 1981.0456 m
2077.1054 1981.0456 L
2077.1054 1984.4993 L
2078.0081 1984.4993 L
2080.0882 1981.0456 L
2081.6189 1981.0456 L
2079.4603 1984.5582 L
2080.775 1984.676 2081.56 1985.3431 2081.56 1986.7168 C
2081.56 1988.4044 2080.5199 1989.0716 2078.5968 1989.0716 C
2075.6141 1989.0716 L
2075.6141 1981.0456 L
h
2078.3418 1979.3187 m
2075.3786 1979.3187 2072.9846 1981.7128 2072.9846 1985.0292 C
2072.9846 1988.3455 2075.3786 1990.7396 2078.3418 1990.7396 C
2081.3049 1990.7396 2083.6989 1988.3455 2083.6989 1985.0292 C
2083.6989 1981.7128 2081.3049 1979.3187 2078.3418 1979.3187 C
h
2078.3418 1977.9451 m
2082.2468 1977.9451 2085.4258 1981.1241 2085.4258 1985.0292 C
2085.4258 1988.9342 2082.2468 1992.1132 2078.3418 1992.1132 C
2074.4367 1992.1132 2071.2577 1988.9342 2071.2577 1985.0292 C
2071.2577 1981.1241 2074.4367 1977.9451 2078.3418 1977.9451 C
true setoverprint
f	
false setoverprint
n
false eomode
2031.7963 2026.7097 m
2082.82 2026.7097 L
2082.82 2012.4154 L
2065.1885 2012.4154 L
2065.1885 1978.4009 L
2049.4278 1978.4009 L
2049.4278 2012.4154 L
2031.7963 2012.4154 L
2031.7963 2026.7097 L
true setoverprint
f	
false setoverprint
n
vmr
vmr
end
%%Trailer
